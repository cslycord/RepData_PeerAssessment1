#more quickly unzip just one of them if only that is missing
if(!file.exists(File1)){unzip(ZipFile,files=File1)}
if(!file.exists(File2)){unzip(ZipFile,files=File2)}
NEI <- readRDS(File2)
SCC <- readRDS(File1)
write.csv(NEI,"NEI.csv")
write.csv(SCC,"SCC.csv")
Baltimore = subset(NEI,fips == "24510")
str(Baltimore)
library(ggplot2)
aggDataByTypeYear = aggregate(Emissions, data = Baltimore,by=list(type,year),FUN=sum, na.rm=TRUE)
aggDataByTypeYear = aggregate(Emissions ~ year, data = Baltimore,by=list(type,year),FUN=sum, na.rm=TRUE)
str(Baltimore)
Baltimore$type = as.factor(Baltimore$type)
merge(aggregate(Emissions ~ year, dat, sum), dat, by = c("type", "year"))
merge(aggregate(Emissions ~ year, Baltimore, sum), Baltimore, by = c("type", "year"))
merge(aggregate(Emissions, Baltimore, sum), Baltimore, by = c("type", "year"))
merge(aggregate(Emissions ~ year, Baltimore, sum), Baltimore, by = c("type", "year"))
aggregate(Emissions ~ year, Baltimore, sum)
aggregate(Emissions ~ year+type, Baltimore, sum)
aggregate(Emissions ~ type+year, Baltimore, sum)
aggregate(Emissions ~ year+type, Baltimore, sum)
aggregate(Emissions ~ year+type, Baltimore, sum,na.rm=TRUE)
aggregate(Emissions ~ year+type, Baltimore, sum)
aggregate(Emissions ~ year+type, Baltimore, sum,na.rm=TRUE)
aggDataByTypeYear = aggregate(Emissions ~ year+type, Baltimore, sum,na.rm=TRUE)
ggplot(aggDataByTypeYear)+geom_point(aes(x=Emissions,y=year,colour=year))+facet_wrap(~type)
ggplot(aggDataByTypeYear)+geom_point(aes(x=Emissions,y=year,colour=year))+facet_wrap(~type)+geom_smooth(method="lm")
ggplot(aggDataByTypeYear)+geom_smooth(method="lm")+geom_point(aes(x=Emissions,y=year,colour=year))+facet_wrap(~type)
ggplot(aggDataByTypeYear)+geom_point(aes(x=Emissions,y=year,colour=year))+geom_smooth(method="lm")+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=Emissions,y=year,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=Emissions,y=year,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+scale_y_log10()
ggplot(aggDataByTypeYear,aes(x=Emissions,y=year,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=Emissions,y=year,colour=year))+geom_histogram()+geom_smooth(method="lm")+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=Emissions,y=year,colour=year))+geom_histogram()+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=Emissions,fill=year))+geom_histogram()+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=Emissions,y=year,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)
summary(aggDataByTypeYear$Emissions)
aggDataByTypeYear = aggregate(Emissions ~ year+type, Baltimore, median,na.rm=TRUE)
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Emmision Levels Per Year (separated by type)")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")+scale_fill_brewer(palette="Dark2")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")+scale_fill_brewer(palette="Dark3")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")+scale_fill_brewer(palette="Dark2")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")+scale_fill_brewer(palette="Accent")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,colour=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,color=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,color=year))+geom_point()+scale_color_manual(values=c("red", "blue", "green"))+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,color=year))+geom_point()+scale_color_manual(values=c("red", "blue", "green","yellow"))+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
aggDataByTypeYear$Emissions
ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,color=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggsave(plot3.png,device=png)
ggsave("plot3.png",device=png)
ggsave("plot3.png",plot = last_plot(),device=png)
plot3 = ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,color=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggsave("plot3.png",plot = plot3,device=png)
ggsave("plot3.png",plot = plot3,device="png")
plot3 = ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,color=year))
+geom_point()
+geom_smooth(method="lm")
+facet_wrap(~type)
+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggsave("plot3.png",plot = plot3,device="png")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot1.R")
source("plot2.R")
source("plot2.R")
source("plot1.R")
source("plot2.R")
source("plot1.R")
source("plot1.R")
source("plot2.R")
source("readData.R")
Baltimore = subset(NEI,fips == "24510")
aggDataByTypeYear = aggregate(Emissions ~ year+type, Baltimore, sum,na.rm=TRUE)
library(ggplot2)
plot3 = ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,color=year))+geom_point()+geom_smooth(method="lm")+facet_wrap(~type)+ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
ggsave("plot3.png",plot = plot3,device="png")
rm(ls=())
rm(list=ls()
)
source("plot3.R")
grep("coal$",SCC$EI.Sector
)
grep("Coal$",SCC$EI.Sector)
SCC[,grep("Coal$",SCC$EI.Sector)]
grep("Coal$",SCC$EI.Sector)
SCC[grep("Coal$",SCC$EI.Sector),]
SCC[grep("Coal$",SCC$EI.Sector),]$SCC
Coal = SCC[grep("Coal$",SCC$EI.Sector),]$SCC
rm(Coal)
str(SCC[grep("Coal$",SCC$EI.Sector),])
str(NEI)
Coal = as.character(SCC[grep("Coal$",SCC$EI.Sector),]$SCC)
NEIclean = NEI[NEI$SCC %in% Coal, ]
str(NEIclean)
rm(NEIclean)
NEICoal = NEI[NEI$SCC %in% Coal, ]
aggDataByYear = aggregate(Emissions ~ year, data = NEICoal, median)
plot(aggDataByYear$year,aggDataByYear$Emissions,pch=20,
main="Total Emissions Per Year (Baltimore)",xlab="Year",ylab="Emissions")
abline(lm(aggDataByYear$Emissions ~ aggDataByYear$year),col="red")
aggDataByYear = aggregate(Emissions ~ year, data = NEICoal, sum)
plot(aggDataByYear$year,aggDataByYear$Emissions,pch=20,
main="Total Emissions Per Year (Baltimore)",xlab="Year",ylab="Emissions")
abline(lm(aggDataByYear$Emissions ~ aggDataByYear$year),col="red")
rm(list=ls())
source("plot4.R")
source("plot4.R")
source("plot4.R")
rm(Coal,medianCoalEmissions,totalCoalEmissions,NEICoal)
Baltimore = subset(NEI,fips == "24510")
rm(Baltimore)
Vehicles = as.character(SCC[grep("Vehicles$",SCC$EI.Sector),]$SCC)
NEIVehicles = NEI[NEI$SCC %in% Vehicles, ]
Baltimore = subset(NEIVehicles,fips == "24510")
rm(list=ls())
source("plot5.R")
source("plot5.R")
source("plot5.R")
mtext("Vehicular Emissions in Baltimore", side = 3,line = 3, outer = TRUE)
mtext("Vehicular Emissions in Baltimore", outer = TRUE)
mtext("Vehicular Emissions in Baltimore", side = 3)
mtext("Vehicular Emissions in Baltimore", side = 3, outer = TRUE)
mtext("Vehicular Emissions in Baltimore", side = 3,line = -5, outer = TRUE)
mtext("Vehicular Emissions in Baltimore", side = 3,line = -2, outer = TRUE)
mtext("Vehicular Emissions in Baltimore", side = 3,line = -1, outer = TRUE)
mtext("Vehicular Emissions in Baltimore", side = 3,line = -2, outer = TRUE)
source("plot5.R")
source("plot5.R")
source("plot4.R")
source("plot4.R")
rm(list = ls())
source("plot4.R")
rm(list=ls())
source("plot3.R")
print(plot32)
plot32 = ggplot(aggDataByTypeYear,aes(x=year,y=Emissions,group=year))+
geom_boxplot()+
facet_wrap(~type)+
ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
print(plot32)
plot32 = ggplot(aggDataByTypeYear,aes(x=year,y=Emissions))+
geom_boxplot()+
facet_wrap(~type)+
ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
print(plot32)
plot32 = ggplot(Baltimore,aes(x=year,y=Emissions,group=year))+
geom_boxplot()+
facet_wrap(~type)+
ggtitle("Median Baltimore Emmision Levels Per Year (separated by type)")
print(plot32)
?stat_summary
aggDataByYear = aggregate(Emissions ~ year, data = NEI, sum)
barplot(aggDataByYear$Emissions)
barplot(aggDataByYear$Emissions, main="Total Emissions By Year",names.arg=aggDataByYear$year)
par(mfrow=c(1,1))
barplot(aggDataByYear$Emissions, main="Total Emissions By Year",names.arg=aggDataByYear$year)
barplot(aggDataByYear$Emissions, main="Total Emissions By Year",names.arg=aggDataByYear$year,xlab="Year",ylab="Total Emissions")
barplot(aggDataByYear$Emissions, main="Total Emissions By Year(US)",names.arg=aggDataByYear$year,xlab="Year",ylab="Total Emissions")
barplot(aggDataByYear$Emissions, main="Total Emissions By Year (US)",names.arg=aggDataByYear$year,xlab="Year",ylab="Total Emissions")
rm(list=ls())
source("plot1.R")
rm(list=ls())
source("plot2.R")
barplot(aggDataByYear$Emissions,
main="Total Emissions By Year (Baltimore)",
names.arg=aggDataByYear$year,
xlab="Year",
ylab="Total Emissions")
fit=lm(aggDataByYear$Emissions~aggDataByYear$year)
abline(fit)
abline(lm(aggDataByYear$Emissions~aggDataByYear$year))
fit=lm(aggDataByYear$Emissions~I(aggDataByYear$year-1999))
abline(fit)
abline(fit, color="red")
abline(fit, col="red")
fit=lm(aggDataByYear$Emissions~I(aggDataByYear$year-1999),col="red")
fit=lm(aggDataByYear$Emissions~I(aggDataByYear$year-1999))
abline(fit, col="red")
barplot(aggDataByYear$Emissions,
main="Total Emissions By Year (Baltimore)",
names.arg=aggDataByYear$year,
xlab="Year",
ylab="Total Emissions")
fit=lm(aggDataByYear$Emissions~I(aggDataByYear$year-1999))
abline(fit, col="red")
source("plot1.R")
source("plot1.R")
source("plot2.R")
source("plot3.R")
print(plot3)
print(plot32)
ggplot(Baltimore,aes(x=year,y=Emmisions,group=year))+geom_bar()
ggplot(Baltimore,aes(x=year,y=Emisions,group=year))+geom_bar()
ggplot(Baltimore,aes(x=year,y=Emissions,group=year))+geom_bar()
ggplot(Baltimore,aes(x=year,group=year))+geom_bar()
ggplot(Baltimore,aes(x=year,group=type))+geom_bar()
ggplot(Baltimore,aes(type))+geom_bar()
ggplot(Baltimore,aes(type),group=year)+geom_bar()
source("plot3.R")
source("plot3.R")
source("plot4.R")
source("plot3.R")
source("plot4.R")
boxplot(NEICoal$Emissions)
boxplot(NEICoal$Emissions,group=year)
ggplot(NEICoal,aes(x=year,y=Emissions,color=year))+geom_boxplot()
ggplot(NEICoal,aes(x=year,y=Emissions,group=year))+geom_boxplot()
ggplot(NEICoal,aes(x=year,y=Emissions,group=year))+geom_boxplot()+geom_smoth(method="lm")
ggplot(NEICoal,aes(x=year,y=Emissions,group=year))+geom_boxplot()+geom_smooth(method="lm")
boxplot(NEICoal$Emissions~NEICoal$year)
par(mfrow=c(1,1))
boxplot(NEICoal$Emissions~NEICoal$year)
boxplot(NEICoal$Emissions~NEICoal$year,log=y)
boxplot(NEICoal$Emissions~NEICoal$year,log="y")
boxplot(NEICoal$Emissions~NEICoal$year,log="x")
boxplot(NEICoal$Emissions~NEICoal$year,log="y")
boxplot(NEICoal$Emissions~NEICoal$year,log="y",ylim=0.001,1000)
boxplot(NEICoal$Emissions~NEICoal$year,log="y",ylim=(0.001,1000))
boxplot(NEICoal$Emissions~NEICoal$year,log="y",ylim=c(0.001,1000))
par(mfrow=c(1,2))
plot(medianCoalEmissions$year,medianCoalEmissions$Emissions,pch=20,
xlab="Year",ylab="Emissions (median)")
abline(lm(medianCoalEmissions$Emissions ~ medianCoalEmissions$year),col="red")
plot(totalCoalEmissions$year,totalCoalEmissions$Emissions,pch=20,
xlab="Year",ylab="Emissions (total)")
abline(lm(totalCoalEmissions$Emissions ~ totalCoalEmissions$year),col="red")
mtext("Coal Emissions in USA", side = 3,line = -2, outer = TRUE)
source("plot4.R")
source("plot4.R")
source("plot4.R")
aggregate(Emissions ~ cut(year, "1 year"), NEICoal, summary)
aggregate(Emissions ~ year, NEICoal, summary)
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot4.R")
source("plot5.R")
str(meanBaltEmissions$year)
source("plot5.R")
str(meanBaltEmissions$year)
source("plot5.R")
source("plot5.R")
source("plot5.R")
source("plot5.R")
source("plot1.R")
source("plot2.R")
source("plot1.R")
source("plot5.R")
source("plot5.R")
source("plot5.R")
source("plot1.R")
source("plot1.R")
source("plot2.R")
source("plot4.R")
source("plot5.R")
source("plot5.R")
source("plot4.R")
source("plot5.R")
source("plot2.R")
source("plot3.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot6.R")
source("plot5.R")
source("plot4.R")
source("plot6.R")
source("plot5.R")
source("plot4.R")
source("plot3.R")
source("plot2.R")
source("plot1.R")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
1-((2+1)/36)
deck
52
4/52
0
4/52
12/52
3/51
2/50
2/51
update.packages(ask="n")
update.packages(ask="n")
update.packages(ask="n")
swirl()
library(swirl)
swirl()
1.6*.8
1.6*.8*.5
1.6*.8
1.6*.8/2
library(swirl)
swirl()
1.6*.8*.5
1.6*.8*.5
mypdf
integrate(mypdf,lower = 0,upper = 1.6)
sqrt(4*.5)
99.7/100*.001
(1-99.7/100)*(1-.001)
(98.5/100)*(1-.001)
(1-98.5/100)*(1-.001)
(98.5/100)*(1-.001)/((1-98.5/100)*(1-.001))
library(swirl)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
(99.7/100)*.001
(1-98.5/100)*(1-.001)
(99.7/100)*.001/((1-98.5/100)*(1-.001))
(99.7/100)*.001/((97/100*.001)*((1-98.5/100)*(1-.001))
)
(.997*.001)/(.997*.001 + .015*.999)
(1+2+3+4+5+6)/6
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
myfunc(0,2)
integrate(myfunc,lower = 0,upper = 2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
?qunif
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
1*.1+2*.2+3*.3+4*.4
(.75*.3)/(.75*.3+.52*.7)
update.packages(ask = FALSE)
setwd("~/RepData_PeerAssessment1")
library(ezknitr)
ezknit("PA1_template.Rmd",fig_dir = "figure")
UrlFile="https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
ZipFile="activity.zip"
CsvFile="activity.csv"
if(!file.exists(ZipFile)){
download.file(url = UrlFile,destfile = ZipFile,mode = "wb")
}
if(!file.exists(CsvFile)){
unzip(ZipFile)
}
DataFrame = read.csv(CsvFile)
cleanDF = DataFrame
for(i in 1:nrow(cleanDF)){
currentRow=cleanDF[i,]
if(is.na(currentRow$steps)){
interv = currentRow$interval
currentRow$steps = round(MeanSteps[which(MeanSteps$interval == interv),]$steps)}
}
MeanSteps = setNames(aggregate(DataFrame$steps,by=list(interval=DataFrame$interval),
FUN=mean,na.rm=TRUE),c("interval","steps"))
cleanDF = DataFrame
for(i in 1:nrow(cleanDF)){
currentRow=cleanDF[i,]
if(is.na(currentRow$steps)){
interv = currentRow$interval
currentRow$steps = round(MeanSteps[which(MeanSteps$interval == interv),]$steps)}
}
cleanDF
tail(cleanDF)
rm(currentRow)
cleanDF = DataFrame
for(i in 1:nrow(cleanDF)){
if(is.na(cleanDF[i,]$steps)){
interv = cleanDF[i,]$interval
cleanDF[i,]$steps = round(MeanSteps[which(MeanSteps$interval == interv),]$steps)}
}
tail(cleanDF)
CleanDailySteps = setNames(aggregate(DataFrame$steps,by=list(date=DataFrame$date),
FUN=sum,na.rm=TRUE),c("date","steps"))
CleanDailySteps = setNames(aggregate(cleanDF$steps,by=list(date=cleanDF$date),
FUN=sum,na.rm=TRUE),c("date","steps"))
hist(CleanDailySteps$steps,xlab = "Total Steps Per Day",main = "Histogram of Total Daily Steps")
hist(CleanDailySteps$steps,xlab = "Total Steps Per Day",main = "Histogram of Total Daily Steps w/ Missing Data Inputted")
rm(list=ls())
library(ezknitr)
ezknit("PA1_template.Rmd",fig_dir = "figure")
UrlFile="https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
ZipFile="activity.zip"
CsvFile="activity.csv"
if(!file.exists(ZipFile)){
download.file(url = UrlFile,destfile = ZipFile,mode = "wb")
}
if(!file.exists(CsvFile)){
unzip(ZipFile)
}
DataFrame = read.csv(CsvFile)
str(DataFrame)
weekdays(as.Date("2012-10-01",format="%y-%d-%m"))
weekdays(as.Date("2012-10-01",format="%Y-%d-%m"))
the_weekdays=c("Monday","Tuesday","Wednesday","Thursday","Friday")
theWeekend=c("Saturday","Sunday")
weekdays(as.Date(DataFrame$date,format="%Y-%d-%m"))
str(the_weekdays)
math(weekdays(as.Date(DataFrame$date,format="%Y-%d-%m")),the_weekdays)
match(weekdays(as.Date(DataFrame$date,format="%Y-%d-%m")),the_weekdays)
weekdays(as.Date(DataFrame$date,format="%Y-%d-%m"))
weekdays(as.Date(DataFrame$date,format="%Y-%d-%m")) %in% the_weekdays
library(chron)
weekdays(as.Date(DataFrame$date,format="%Y-%d-%m"))
is.weekend(as.Date(DataFrame$date,format="%Y-%d-%m"))
is.weekend(as.Date(DataFrame$date,format="%Y-%d-%m"))
is.weekday(as.Date(DataFrame$date,format="%Y-%d-%m"))
is.weekend(as.Date(DataFrame$date,format="%Y-%d-%m"))
factor(is.weekend(as.Date(DataFrame$date,format="%Y-%d-%m")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
factor(is.weekend(as.Date(DataFrame$date,format="%Y-%d-%m")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
is.weekend(as.Date(DataFrame$date,format="%Y-%d-%m"))
as.Date(DataFrame$date,format="%Y-%d-%m")
is.weekend(as.Date(DataFrame$date,format="%Y-%m-%d"))
is.weekend(as.Date(DataFrame$date,format="%Y-%m-%d"))
factor(is.weekend(as.Date(DataFrame$date,format="%Y-%m-%d")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
weekdays(as.Date(DataFrame$date,format="%Y-%d-%m"))
library(timeDate)
install.packages("timeDate")
library(timeDate)
factor(is.weekend(as.Date(DataFrame$date,format="%Y-%m-%d")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
isWeekday(as.Date(DataFrame$date,format="%Y-%m-%d"))
factor(is.weekend(as.Date(DataFrame$date,format="%Y-%m-%d")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
factor(is.weekend(as.Date(CleanDataFrame$date,format="%Y-%m-%d")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
View(DataFrame)
cleanDF = DataFrame
for(i in 1:nrow(cleanDF)){
if(is.na(cleanDF[i,]$steps)){
interv = cleanDF[i,]$interval
cleanDF[i,]$steps = round(MeanSteps[which(MeanSteps$interval == interv),]$steps)}
}
MeanSteps = setNames(aggregate(DataFrame$steps,by=list(interval=DataFrame$interval),
FUN=mean,na.rm=TRUE),c("interval","steps"))
cleanDF = DataFrame
for(i in 1:nrow(cleanDF)){
if(is.na(cleanDF[i,]$steps)){
interv = cleanDF[i,]$interval
cleanDF[i,]$steps = round(MeanSteps[which(MeanSteps$interval == interv),]$steps)}
}
cleanDF$WkDayWkEnd = factor(is.weekend(as.Date(CleanDataFrame$date,format="%Y-%m-%d")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
cleanDF$WkDayWkEnd = factor(is.weekend(as.Date(CleanDF$date,format="%Y-%m-%d")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
cleanDF$WkDayWkEnd = factor(is.weekend(as.Date(cleanDF$date,format="%Y-%m-%d")),levels=c(TRUE,FALSE),labels=c("weekend","weekday"))
cleanDF$WkDayWkEnd
MeanSteps = setNames(aggregate(DataFrame$steps,by=list(interval=DataFrame$interval),
FUN=mean,na.rm=TRUE),c("interval","steps"))
DailyMeanSteps = setNames(aggregate(cleanDF$steps,by=list(cleanDF$WkDayWkEnd,interval=cleanDF$interval),
FUN=mean,na.rm=TRUE),c("interval","steps"))
DailyMeanSteps
library(ggplot2)
MeanSteps = setNames(aggregate(DataFrame$steps,by=list(interval=DataFrame$interval),
FUN=mean,na.rm=TRUE),c("weekday/weekend","interval","steps"))
DailyMeanSteps = setNames(aggregate(cleanDF$steps,by=list(cleanDF$WkDayWkEnd,interval=cleanDF$interval),
FUN=mean,na.rm=TRUE),c("weekday/weekend","interval","steps"))
str(DailyMeanSteps)
WeeklyMeanSteps = setNames(aggregate(cleanDF$steps,by=list(cleanDF$WkDayWkEnd,interval=cleanDF$interval),
FUN=mean,na.rm=TRUE),c("weekday/weekend","interval","steps"))
rm(DailyMeanSteps)
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps)
library(lattice)
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps)
p=ggplot(WeeklyMeanSteps,aes(x=steps,y=interval))+geom_point(shape=1)+facet_wrap( ~ `weekday/weekend`, ncol=2)
p
p=ggplot(WeeklyMeanSteps,aes(x=steps,y=interval))+geom_point(shape=1)+facet_wrap( ~ `weekday/weekend`, ncol=1)
p
p=ggplot(WeeklyMeanSteps,aes(x=interval,y=steps))+geom_point(shape=1)+facet_wrap( ~ `weekday/weekend`, ncol=1)
p
p=ggplot(WeeklyMeanSteps,aes(x=interval,y=steps))+geom_point(shape=2)+facet_wrap( ~ `weekday/weekend`, ncol=1)
p
p=ggplot(WeeklyMeanSteps,aes(x=interval,y=steps))+geom_line()+facet_wrap( ~ `weekday/weekend`, ncol=1)
p
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='b')
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='l')
qplot(interval, steps, data = WeeklyMeanSteps, facets = .~`weekday/weekend`, geom = "line")
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='l')
xyplot(steps ~ interval|.`weekday/weekend`, data=WeeklyMeanSteps,type='l')
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='l')
xyplot(steps ~ interval|`.weekday/weekend`, data=WeeklyMeanSteps,type='l')
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='l')
xyplot(`weekday/weekend`|steps ~ interval, data=WeeklyMeanSteps,type='l')
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='l')
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='l',xlab="Number of Steps")
xyplot(steps ~ interval|`weekday/weekend`, data=WeeklyMeanSteps,type='l',ylab="Number of Steps")
ezknit("PA1_template.Rmd",fig_dir = "figure")
